{"ast":null,"code":"var _jsxFileName = \"/home/j/Documents/code/Random Projects/color-swatch/src/Components/MySwatches/SwatchDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SwatchPickerStyle from './SwatchPickerStyle';\nimport chroma from 'chroma-js';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport X from '../../Images/X.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SwatchDiv = _ref => {\n  _s();\n\n  let {\n    bg,\n    onDelete,\n    colorRemover\n  } = _ref;\n  const [textColor, setTextColor] = useState();\n  const [copied, setCopied] = useState(); //TODO: props to convert??\n\n  useEffect(() => {\n    if (chroma(bg.color).luminance() < 0.2) {\n      setTextColor('text-white');\n    } else {\n      setTextColor('text-black');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n    text: bg.color,\n    onCopy: () => setCopied({\n      copied: true\n    }),\n    children: /*#__PURE__*/_jsxDEV(SwatchPickerStyle, {\n      bg: bg.color,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swatch-div d-flex align-items-end\",\n        children: [colorRemover && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onDelete(bg.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: X,\n            className: \"image-x-resize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: textColor,\n          children: bg.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SwatchDiv, \"BAd2Ml2kCKNZqJ6V1ajrYANQdNk=\");\n\n_c = SwatchDiv;\nexport default SwatchDiv;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwatchDiv\");","map":{"version":3,"sources":["/home/j/Documents/code/Random Projects/color-swatch/src/Components/MySwatches/SwatchDiv.js"],"names":["React","useEffect","SwatchPickerStyle","chroma","useState","CopyToClipboard","X","SwatchDiv","bg","onDelete","colorRemover","textColor","setTextColor","copied","setCopied","color","luminance","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,CAAP,MAAc,oBAAd;;;AAEA,MAAMC,SAAS,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,GAAmC;AACrD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC,CAFqD,CAIrD;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIE,MAAM,CAACK,EAAE,CAACO,KAAJ,CAAN,CAAiBC,SAAjB,KAA+B,GAAnC,EAAwC;AACvCJ,MAAAA,YAAY,CAAC,YAAD,CAAZ;AACA,KAFD,MAEO;AACNA,MAAAA,YAAY,CAAC,YAAD,CAAZ;AACA;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACC,QAAC,eAAD;AAAiB,IAAA,IAAI,EAAEJ,EAAE,CAACO,KAA1B;AAAiC,IAAA,MAAM,EAAE,MAAMD,SAAS,CAAC;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAxD;AAAA,2BACC,QAAC,iBAAD;AAAmB,MAAA,EAAE,EAAEL,EAAE,CAACO,KAA1B;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,mBACEL,YAAY,iBACZ;AAAK,UAAA,OAAO,EAAE,MAAMD,QAAQ,CAACD,EAAE,CAACS,EAAJ,CAA5B;AAAA,iCACC;AAAK,YAAA,GAAG,EAAEX,CAAV;AAAa,YAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAMC;AAAG,UAAA,SAAS,EAAEK,SAAd;AAAA,oBAA0BH,EAAE,CAACO;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CA5BD;;GAAMR,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport SwatchPickerStyle from './SwatchPickerStyle'\nimport chroma from 'chroma-js'\nimport { useState } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport X from '../../Images/X.png'\n\nconst SwatchDiv = ({ bg, onDelete, colorRemover }) => {\n\tconst [textColor, setTextColor] = useState()\n\tconst [copied, setCopied] = useState()\n\n\t//TODO: props to convert??\n\n\tuseEffect(() => {\n\t\tif (chroma(bg.color).luminance() < 0.2) {\n\t\t\tsetTextColor('text-white')\n\t\t} else {\n\t\t\tsetTextColor('text-black')\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<CopyToClipboard text={bg.color} onCopy={() => setCopied({ copied: true })}>\n\t\t\t<SwatchPickerStyle bg={bg.color}>\n\t\t\t\t<div className='swatch-div d-flex align-items-end'>\n\t\t\t\t\t{colorRemover && (\n\t\t\t\t\t\t<div onClick={() => onDelete(bg.id)}>\n\t\t\t\t\t\t\t<img src={X} className='image-x-resize' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<p className={textColor}>{bg.color}</p>\n\t\t\t\t</div>\n\t\t\t</SwatchPickerStyle>\n\t\t</CopyToClipboard>\n\t)\n}\n\nexport default SwatchDiv\n"]},"metadata":{},"sourceType":"module"}