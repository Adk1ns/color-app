{"ast":null,"code":"var _jsxFileName = \"/home/j/Documents/code/Random Projects/color-swatch/src/Components/MySwatches.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SwatchPicker from './MySwatches/SwatchPicker';\nimport MySwatch from './MySwatches/MySwatch';\nimport UserContext from '../Context/user-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MySwatches = (mySwatches, setMySwatches) => {\n  _s();\n\n  console.log(mySwatches);\n  const ctx = useContext(UserContext);\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [swatchPickerOpen, setSwatchPickerOpen] = useState(true);\n  const [colorsInSwatch, setColorsInSwatch] = useState([]); // const [mySwatches, setMySwatches] = useState([\n  // \t{\n  // \t\tname: 'Swatchy',\n  // \t\tid: 10,\n  // \t\tstyle: ['popular', 'winter', 'red'],\n  // \t\tcolors: [\n  // \t\t\t{\n  // \t\t\t\tid: 1,\n  // \t\t\t\tcolor: '#2b2d42',\n  // \t\t\t\tswatch: 'one',\n  // \t\t\t},\n  // \t\t\t{\n  // \t\t\t\tid: 2,\n  // \t\t\t\tcolor: '#8d99ae',\n  // \t\t\t\tswatch: 'one',\n  // \t\t\t},\n  // \t\t\t{\n  // \t\t\t\tid: 3,\n  // \t\t\t\tcolor: '#edf2f4',\n  // \t\t\t\tswatch: 'one',\n  // \t\t\t},\n  // \t\t\t{\n  // \t\t\t\tid: 4,\n  // \t\t\t\tcolor: '#ef233c',\n  // \t\t\t\tswatch: 'one',\n  // \t\t\t},\n  // \t\t\t{\n  // \t\t\t\tid: 5,\n  // \t\t\t\tcolor: '#d90429',\n  // \t\t\t\tswatch: 'one',\n  // \t\t\t},\n  // \t\t],\n  // \t},\n  // ])\n  //IDEA: make mySwatches obj into context api if logged in?\n\n  const logInOut = () => {\n    setIsLoggedIn(!isLoggedIn);\n  };\n\n  const togglePicker = () => {\n    setSwatchPickerOpen(!swatchPickerOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Consumer, {\n    children: ctx => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Merienda\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logInOut,\n          children: \"LogIn/Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePicker,\n          children: \"TogglePicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [swatchPickerOpen && /*#__PURE__*/_jsxDEV(SwatchPicker, {\n            setMySwatches: setMySwatches,\n            mySwatches: mySwatches,\n            colorsInSwatch: colorsInSwatch,\n            setColorsInSwatch: setColorsInSwatch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"THIS IS A LIST OF MYSWATCHES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-around flex-wrap\",\n              children: mySwatches.map((swatch, index) => /*#__PURE__*/_jsxDEV(MySwatch, {\n                swatch: swatch,\n                mySwatches: mySwatches,\n                setMySwatches: setMySwatches,\n                setColorsInSwatch: setColorsInSwatch\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 12\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"upgrade for more swatches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Please log the fuck in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MySwatches, \"ZC28pPn/BT/mTQzpqb/qsXIRTgo=\");\n\n_c = MySwatches;\nexport default MySwatches;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwatches\");","map":{"version":3,"sources":["/home/j/Documents/code/Random Projects/color-swatch/src/Components/MySwatches.js"],"names":["React","useState","useContext","SwatchPicker","MySwatch","UserContext","MySwatches","mySwatches","setMySwatches","console","log","ctx","isLoggedIn","setIsLoggedIn","swatchPickerOpen","setSwatchPickerOpen","colorsInSwatch","setColorsInSwatch","logInOut","togglePicker","map","swatch","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAO,sCAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;;AAEA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,KAA+B;AAAA;;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,QAAMI,GAAG,GAAGT,UAAU,CAACG,WAAD,CAAtB;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD,CALiD,CAMjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMiB,QAAQ,GAAG,MAAM;AACtBL,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACA,GAFD;;AAGA,QAAMO,YAAY,GAAG,MAAM;AAC1BJ,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACA,GAFD;;AAIA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAA,cACGH,GAAD,IAAS;AACT,0BACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACC;AAAQ,UAAA,OAAO,EAAEO,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAQ,UAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGEP,UAAU,iBACV;AAAA,qBACEE,gBAAgB,iBAChB,QAAC,YAAD;AACC,YAAA,aAAa,EAAEN,aADhB;AAEC,YAAA,UAAU,EAAED,UAFb;AAGC,YAAA,cAAc,EAAES,cAHjB;AAIC,YAAA,iBAAiB,EAAEC;AAJpB;AAAA;AAAA;AAAA;AAAA,kBAFF,eASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATD,eAUC;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACC;AAAK,cAAA,SAAS,EAAC,4DAAf;AAAA,wBACEV,UAAU,CAACa,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBACf,QAAC,QAAD;AACC,gBAAA,MAAM,EAAED,MADT;AAGC,gBAAA,UAAU,EAAEd,UAHb;AAIC,gBAAA,aAAa,EAAEC,aAJhB;AAKC,gBAAA,iBAAiB,EAAES;AALpB,iBAEMK,KAFN;AAAA;AAAA;AAAA;AAAA,sBADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAVD,eAuBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBD;AAAA,wBAJF,EA8BE,CAACV,UAAD,iBACA;AAAA,iCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAsCA;AAxCF;AAAA;AAAA;AAAA;AAAA,UADD;AA4CA,CA9FD;;GAAMN,U;;KAAAA,U;AAgGN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { useState, useContext } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport SwatchPicker from './MySwatches/SwatchPicker'\nimport MySwatch from './MySwatches/MySwatch'\nimport UserContext from '../Context/user-context'\n\nconst MySwatches = (mySwatches, setMySwatches) => {\n\tconsole.log(mySwatches)\n\tconst ctx = useContext(UserContext)\n\tconst [isLoggedIn, setIsLoggedIn] = useState(true)\n\tconst [swatchPickerOpen, setSwatchPickerOpen] = useState(true)\n\tconst [colorsInSwatch, setColorsInSwatch] = useState([])\n\t// const [mySwatches, setMySwatches] = useState([\n\t// \t{\n\t// \t\tname: 'Swatchy',\n\t// \t\tid: 10,\n\t// \t\tstyle: ['popular', 'winter', 'red'],\n\t// \t\tcolors: [\n\t// \t\t\t{\n\t// \t\t\t\tid: 1,\n\t// \t\t\t\tcolor: '#2b2d42',\n\t// \t\t\t\tswatch: 'one',\n\t// \t\t\t},\n\t// \t\t\t{\n\t// \t\t\t\tid: 2,\n\t// \t\t\t\tcolor: '#8d99ae',\n\t// \t\t\t\tswatch: 'one',\n\t// \t\t\t},\n\t// \t\t\t{\n\t// \t\t\t\tid: 3,\n\t// \t\t\t\tcolor: '#edf2f4',\n\t// \t\t\t\tswatch: 'one',\n\t// \t\t\t},\n\t// \t\t\t{\n\t// \t\t\t\tid: 4,\n\t// \t\t\t\tcolor: '#ef233c',\n\t// \t\t\t\tswatch: 'one',\n\t// \t\t\t},\n\t// \t\t\t{\n\t// \t\t\t\tid: 5,\n\t// \t\t\t\tcolor: '#d90429',\n\t// \t\t\t\tswatch: 'one',\n\t// \t\t\t},\n\t// \t\t],\n\t// \t},\n\t// ])\n\n\t//IDEA: make mySwatches obj into context api if logged in?\n\n\tconst logInOut = () => {\n\t\tsetIsLoggedIn(!isLoggedIn)\n\t}\n\tconst togglePicker = () => {\n\t\tsetSwatchPickerOpen(!swatchPickerOpen)\n\t}\n\n\treturn (\n\t\t<UserContext.Consumer>\n\t\t\t{(ctx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className='Merienda'>\n\t\t\t\t\t\t<button onClick={logInOut}>LogIn/Out</button>\n\t\t\t\t\t\t<button onClick={togglePicker}>TogglePicker</button>\n\t\t\t\t\t\t{isLoggedIn && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{swatchPickerOpen && (\n\t\t\t\t\t\t\t\t\t<SwatchPicker\n\t\t\t\t\t\t\t\t\t\tsetMySwatches={setMySwatches}\n\t\t\t\t\t\t\t\t\t\tmySwatches={mySwatches}\n\t\t\t\t\t\t\t\t\t\tcolorsInSwatch={colorsInSwatch}\n\t\t\t\t\t\t\t\t\t\tsetColorsInSwatch={setColorsInSwatch}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<h1>THIS IS A LIST OF MYSWATCHES</h1>\n\t\t\t\t\t\t\t\t<div className='d-flex flex-wrap'>\n\t\t\t\t\t\t\t\t\t<div className='d-flex align-items-center justify-content-around flex-wrap'>\n\t\t\t\t\t\t\t\t\t\t{mySwatches.map((swatch, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<MySwatch\n\t\t\t\t\t\t\t\t\t\t\t\tswatch={swatch}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tmySwatches={mySwatches}\n\t\t\t\t\t\t\t\t\t\t\t\tsetMySwatches={setMySwatches}\n\t\t\t\t\t\t\t\t\t\t\t\tsetColorsInSwatch={setColorsInSwatch}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h4>upgrade for more swatches</h4>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isLoggedIn && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h1>Please log the fuck in</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}}\n\t\t</UserContext.Consumer>\n\t)\n}\n\nexport default MySwatches\n"]},"metadata":{},"sourceType":"module"}